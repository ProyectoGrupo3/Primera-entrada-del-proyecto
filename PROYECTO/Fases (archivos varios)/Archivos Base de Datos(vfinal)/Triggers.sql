--DISPARADOR PARA PONER ID AL TRABAJADOR
create or replace TRIGGER T_ID_Trabajador
BEFORE INSERT
ON TRABAJADOR
FOR EACH ROW
BEGIN
:new.ID_TRABAJADOR := ID_TRABAJADOR.NEXTVAL;
END;


--DISPARADOR PARA PONER ID AL CENTRO TRABAJO
CREATE OR REPLACE TRIGGER T_ID_CT
BEFORE INSERT
ON CENTRO_TRABAJO
FOR EACH ROW
BEGIN
:new.ID_CENTRO := ID_CENTRO.NEXTVAL;
END;


--CUANDO SE INSERTE UN "TRABAJADOR" CREAR UN REGISTRO EN "CLAVE"
CREATE OR REPLACE TRIGGER INSERTAR_TRABAJADOR
AFTER INSERT
ON TRABAJADOR
FOR EACH ROW
BEGIN
  --INSERT INTO CLAVE VALUES (ID_CLAVE.NEXTVAL,:new.nombre,'himevico12345',SYSDATE,:new.id_trabajador);
   insertar_clave(:new.nombre, :new.id_trabajador);
END;

--DISPARADOR PARA SABER SI HAY EXCESO DE HORAS O NO, CUANDO EL TRABAJADOR CIERRE EL PARTE, SE GUARDARA EN EL EXCESO DE HORAS LOS MINUTOS TOTALES, CUANDO EL ADMIN DE A VERIFICAR SE APLICARA ESTE TRIGGER
create or replace TRIGGER EXCESO_HORAS_AL_VERIFICAR
AFTER UPDATE
ON CP
FOR EACH ROW
DECLARE
BEGIN
IF :NEW.EXCESO_HORAS <= 480 AND :NEW.EXCESO_HORAS < 540 THEN
:NEW.EXCESO_HORAS:= 0;
ELSE IF :NEW.EXCESO_HORAS >= 540 AND :NEW.EXCESO_HORAS < 600 THEN
:NEW.EXCESO_HORAS:= 1;
ELSE IF :NEW.EXCESO_HORAS >= 600 AND :NEW.EXCESO_HORAS < 660 THEN
:NEW.EXCESO_HORAS:= 2;
ELSE IF :NEW.EXCESO_HORAS >= 660  AND :NEW.EXCESO_HORAS < 720 THEN
:NEW.EXCESO_HORAS:= 3;
ELSE IF :NEW.EXCESO_HORAS >=720  AND :NEW.EXCESO_HORAS < 780 THEN
:NEW.EXCESO_HORAS:= 4;
ELSE IF :NEW.EXCESO_HORAS >= 780  AND :NEW.EXCESO_HORAS < 840 THEN
:NEW.EXCESO_HORAS:= 5;
ELSE IF :NEW.EXCESO_HORAS >= 840 AND :NEW.EXCESO_HORAS < 900 THEN
:NEW.EXCESO_HORAS:= 6;
ELSE IF :NEW.EXCESO_HORAS >= 900 AND :NEW.EXCESO_HORAS < 960 THEN
:NEW.EXCESO_HORAS:= 7;
ELSE IF :NEW.EXCESO_HORAS >= 960 AND :NEW.EXCESO_HORAS < 1000 THEN
:NEW.EXCESO_HORAS:= 8;
END IF;
END IF;
END IF;
END IF;
END IF;
END IF;
END IF;
END IF;
END IF;
END;

--DISPARADOR PARA ACTUALIZAR LOS KM TOTALES DEL VEHICULO
CREATE OR REPLACE TRIGGER ACTUALIZAR_KM_TOTALES
AFTER INSERT OR UPDATE
ON CP
FOR EACH ROW
DECLARE
KMTOTAL NUMBER;
BEGIN 
	IF :NEW.CERRAR_LOGIS = 1 THEN
	KMTOTAL:= :NEW.KM_FINAL - :NEW.KM_INICIO;
    UPDATE  VEHICULO
	SET 
	KM_TOTALES = KM_TOTALES + KMTOTAL
	WHERE MATRICULA = :NEW.VEHICULO_MATRICULA;
	END IF;
END;


COMMIT;