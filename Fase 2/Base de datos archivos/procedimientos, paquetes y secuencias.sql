--PAQUETE de Busqueda de centros de trabajo
--CABECERA DEL PAQUETE
CREATE OR REPLACE PACKAGE PAQUETE_BUSCAR_CT IS
PROCEDURE BUSCAR_TOTAL_CT (B OUT SYS_REFCURSOR);
END;
 
--CUERPO DEL PAQUETE
CREATE OR REPLACE PACKAGE BODY PAQUETE_BUSCAR_CT IS
PROCEDURE BUSCAR_TOTAL_CT(B OUT SYS_REFCURSOR)
IS
BEGIN
OPEN B FOR
SELECT *  FROM TCENTRO_TRABAJO;
END;
END;

--PAQUETE de Busqueda de un Centro de trabajo concreto
--CABECERA DEL PAQUETE
CREATE OR REPLACE PACKAGE PAQUETE_BUSCAR_UN_CENTRO IS
PROCEDURE BUSCAR_UN_CENTRO ( ID_C IN TCENTRO_TRABAJO.ID_CENTRO%TYPE, UNO OUT NUMBER, DOS OUT VARCHAR2, TRES OUT VARCHAR2, CUATRO OUT NUMBER, CINCO OUT VARCHAR2, SEIS OUT VARCHAR2, SIETE OUT VARCHAR2, OCHO OUT VARCHAR2);
END;
 
--CUERPO DEL PAQUETE
CREATE OR REPLACE PACKAGE BODY PAQUETE_BUSCAR_UN_CENTRO IS
PROCEDURE BUSCAR_UN_CENTRO ( ID_C IN TCENTRO_TRABAJO.ID_CENTRO%TYPE,  UNO OUT NUMBER, DOS OUT VARCHAR2, TRES OUT VARCHAR2, CUATRO OUT NUMBER, CINCO OUT VARCHAR2, SEIS OUT VARCHAR2, SIETE OUT VARCHAR2, OCHO OUT VARCHAR2)
IS
LINEA TCENTRO_TRABAJO%ROWTYPE;
BEGIN

  SELECT * INTO LINEA FROM TCENTRO_TRABAJO 
  WHERE ID_CENTRO = ID_C;
  UNO:=LINEA.ID_CENTRO;
  DOS:=LINEA.NOMBRE;
  TRES:=LINEA.CALLE;
  CUATRO:=LINEA.NÚMERO;
  CINCO:=LINEA.CÓDIGO_POSTAL;
  SEIS:=LINEA.CIUDAD;
  SIETE:=LINEA.PROVINCIA;
  OCHO:=LINEA.TELÉFONO;
  
  EXCEPTION 
  WHEN NO_DATA_FOUND THEN
  RAISE_APPLICATION_ERROR( -20000  , 'Error', TRUE);
  WHEN TOO_MANY_ROWS THEN
  RAISE_APPLICATION_ERROR( -20000  , 'Error', TRUE);
END;
END;

--Procedimiento de Busqueda de todos los Trabajadores
CREATE OR REPLACE PROCEDURE BUSCAR_TOTAL_T (B OUT SYS_REFCURSOR)
IS
BEGIN
  OPEN B FOR
  SELECT * FROM TTRABAJADOR;
END;

--Procedimiento de Busqueda de un Trabajador
CREATE OR REPLACE PROCEDURE BUSCAR_UN_T (ID_T IN INTEGER, B OUT SYS_REFCURSOR)
AS
BEGIN
OPEN B FOR
  SELECT *  FROM TTRABAJADOR
  WHERE ID_TRABAJADOR = ID_T;
  EXCEPTION 
  WHEN NO_DATA_FOUND THEN
  RAISE_APPLICATION_ERROR( -20000  , 'Error', TRUE);
  WHEN TOO_MANY_ROWS THEN
  RAISE_APPLICATION_ERROR( -20000 , 'Error', TRUE);
END;

--Procedimiento de comprobación del login de usuario
create or replace PROCEDURE COMPROBAR_LOGIN (USU IN VARCHAR2 , PASS IN VARCHAR2, V OUT number )
AS
LINEA TCLAVE%ROWTYPE;
BEGIN
  SELECT * INTO LINEA FROM TCLAVE
  WHERE USU = TCLAVE.USUARIO
  and TCLAVE.CONTRASENA = PASS;
  IF LINEA.USUARIO = USU THEN
  V:= linea.trabajador_id_trabajador;
  END IF;
  EXCEPTION
      WHEN NO_DATA_FOUND THEN
      v:=0;
END;

--Creación de las secuencias usadas para los ID de algunas tablas.
CREATE SEQUENCE ID_CENTRO 
  INCREMENT BY 10 START WITH 10 
  NOMAXVALUE
  MINVALUE 10;
  
  CREATE SEQUENCE ID_TRABAJADOR 
  INCREMENT BY 1 START WITH 1 
  NOMAXVALUE
  MINVALUE 1;
  
  CREATE SEQUENCE ID_CLAVE 
  INCREMENT BY 1 START WITH 1 
  NOMAXVALUE
  MINVALUE 1;
  
  create or replace PROCEDURE P_IN_EDIT_CT(
P_CT_ID TCENTRO_TRABAJO.ID_CENTRO%TYPE,
P_CT_NOMBRE TCENTRO_TRABAJO.NOMBRE%TYPE,
P_CT_CALLE TCENTRO_TRABAJO.CALLE%TYPE,
P_CT_NUMERO TCENTRO_TRABAJO."NÚMERO"%TYPE,
P_CT_CP TCENTRO_TRABAJO."CÓDIGO_POSTAL"%TYPE,
P_CT_CIUDAD TCENTRO_TRABAJO.CIUDAD%TYPE,
P_CT_PROVINCIA TCENTRO_TRABAJO.PROVINCIA%TYPE,
P_CT_TELEFONO TCENTRO_TRABAJO."TELÉFONO"%TYPE)
AS
BEGIN
      UPDATE CENTRO_TRABAJO
      SET
            NOMBRE=P_CT_NOMBRE,
            CALLE=P_CT_CALLE,
            NÚMERO=P_CT_NUMERO,
            CÓDIGO_POSTAL=P_CT_CP,
            CIUDAD = P_CT_CIUDAD,
            PROVINCIA = P_CT_PROVINCIA,
            TELÉFONO = P_CT_TELEFONO
      where ID_CENTRO=P_CT_ID;
IF sql%notfound
THEN
INSERT INTO CENTRO_TRABAJO(ID_CENTRO, NOMBRE, CALLE, "NÚMERO", "CÓDIGO_POSTAL", CIUDAD, PROVINCIA, "TELÉFONO")
VALUES (P_CT_ID, P_CT_NOMBRE, P_CT_CALLE, P_CT_NUMERO, P_CT_CP, P_CT_CIUDAD, P_CT_PROVINCIA, P_CT_TELEFONO);
COMMIT;
END IF;
END;

create or replace PROCEDURE   P_DELETE_CT(
P_CT_ID CENTRO_TRABAJO.ID_CENTRO%TYPE)
AS
BEGIN
      DELETE FROM CENTRO_TRABAJO WHERE ID_CENTRO=p_CT_ID;
COMMIT;
END;
  
 

DROP PUBLIC SYNONYM CONSULTA_CT  ;
--DROP PUBLIC SYNONYM CONSULTA_UN_CT ;
--DROP PUBLIC SYNONYM CONSULTA_T ;
--DROP PUBLIC SYNONYM CONSULTA_UN_T ;
--DROP PUBLIC SYNONYM LOGIN  ;

CREATE PUBLIC SYNONYM CONSULTA_CT FOR PAQUETE_BUSCAR_CT ;
CREATE PUBLIC SYNONYM CONSULTA_UN_CT FOR PAQUETE_BUSCAR_UN_CENTRO;
CREATE PUBLIC SYNONYM CONSULTA_T FOR BUSCAR_TOTAL_T;
CREATE PUBLIC SYNONYM CONSULTA_UN_T FOR BUSCAR_UN_T;
CREATE PUBLIC SYNONYM LOGIN FOR COMPROBAR_LOGIN ;
CREATE PUBLIC SYNONYM EDITAR_CT FOR P_IN_EDIT_CT;
create public synonym secuencia_ct for id_centro;
create public synonym eliminar_ct for p_delete_ct;

COMMIT;

